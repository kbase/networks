storename  = db4-cds

########################################
# c3po
########################################

c3po.setDriverClass = com.mysql.jdbc.Driver
c3po.setJdbcUrl = jdbc:mysql://db4.chicago.kbase.us:3306/kbase_sapling_v3_dev
c3po.setUser = wreckitralph
c3po.setPassword = @glitch&
c3po.setMaxStatements = 180
c3po.setMaxStatementsPerConnection = 10
c3po.setIdleConnectionTestPeriod = 240
c3po.setPreferredTestQuery = SELECT 1


########################################
# basic properties
########################################

Edge2NodeType1.GENE = GENE
Edge2NodeType2.GENE = GENE
Edge2NodeType2.CLUSTER = CLUSTER
Default.EdgeTypes = GENE_GENE
Supported.EdgeTypes = GENE_GENE:GENE_CLUSTER

########################################
# loadDatasets method
########################################
# This is a temporary solution using an assumption that each dataset contains only one taxon
SQL.loadDatasets = select id DATASET_ID, id DATASET_NAME, \
                             description DATASET_DESCRIPTION, \
                             association_type DATASET_NETWORKTYPE,  \
                             data_source DATASET_SOURCEREFERENCE, \
                             to_link DATASET_TAXONS \
                   from AssociationDataset ds, IsDatasetFor d4 \
                   where id = from_link \
                   group by id

########################################
# getDatasets methods
########################################

SQL.getDatasets.GENE = \
    SELECT distinct ig.from_link \
    FROM AssociationFeature af, IsGroupingOf ig  \
    WHERE ig.to_link = af.from_link and af.to_link = ?
QIndex.GeneId.getDatasets.GENE = 1 
RSIndex.DatasetId.getDatasets.GENE = 1

SQL.getDatasets.CLUSTER = \
    SELECT distinct ig.from_link \
    FROM IsGroupingOf ig  \
    WHERE ig.to_link = ?
QIndex.ClusterId.getDatasets.CLUSTER = 1 
RSIndex.DatasetId.getDatasets.CLUSTER = 1


########################################
# buildFirstNeighborNetwork methods
########################################

# Not necessarily optimal performance (need tuning)
# strength : choose one but it can be mean (natural, harmonic, geometric) later
SQL.buildFirstNeighborNetwork.GENE_GENE.GENE = \
    SELECT DISTINCT af1.to_link, af2.to_link, f1.source_id, f2.source_id, 'is interact with', af1.strength \
    FROM IsGroupingOf ig, AssociationFeature af1, AssociationFeature af2, Feature f1, Feature f2 \
    WHERE ig.from_link = ? and ig.to_link = af1.from_link and af1.from_link = af2.from_link and (af1.to_link = ? OR af2.to_link = ?) AND af1.to_link <> af2.to_link AND f1.id = af1.to_link AND f2.id = af2.to_link

QIndex.GeneId.buildFirstNeighborNetwork.GENE_GENE.GENE = 2:3
QIndex.DatasetId.buildFirstNeighborNetwork.GENE_GENE.GENE = 1
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_GENE.GENE = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_GENE.GENE = 2
RSIndex.NodeName1.buildFirstNeighborNetwork.GENE_GENE.GENE = 3
RSIndex.NodeName2.buildFirstNeighborNetwork.GENE_GENE.GENE = 4
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_GENE.GENE = 5
RSIndex.Weight.buildFirstNeighborNetwork.GENE_GENE.GENE = 6

SQL.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = \
     SELECT DISTINCT af1.to_link, a1.id, f1.source_id, a1.name, 'is member of', af1.strength  \
     FROM IsGroupingOf ig, AssociationFeature af1, Association a1, Feature f1  \
     WHERE ig.from_link = ? and ig.to_link = af1.from_link and af1.to_link = ? AND f1.id = af1.to_link AND af1.from_link = a1.id

QIndex.GeneId.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 2
QIndex.DatasetId.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 1
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 2
RSIndex.NodeName1.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 3
RSIndex.NodeName2.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 4
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 5
RSIndex.Weight.buildFirstNeighborNetwork.GENE_CLUSTER.GENE = 6

SQL.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = \
     SELECT DISTINCT af1.to_link, a1.id, f1.source_id, a1.name, 'is member of', af1.strength  \
     FROM IsGroupingOf ig, AssociationFeature af1, Association a1, Feature f1  \
     WHERE ig.from_link = ? and ig.to_link = af1.from_link and a1.id = ? AND f1.id = af1.to_link AND af1.from_link = a1.id

QIndex.ClusterId.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 2
QIndex.DatasetId.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 1
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 2
RSIndex.NodeName1.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 3
RSIndex.NodeName2.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 4
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 5
RSIndex.Weight.buildFirstNeighborNetwork.GENE_CLUSTER.CLUSTER = 6

########################################
# buildInternalNetwork methods
########################################

SQL.buildInternalNetwork.GENE_GENE = \
    SELECT DISTINCT af1.to_link, af2.to_link, f1.source_id, f2.source_id, 'is interact with', af1.strength \
    FROM IsGroupingOf ig, AssociationFeature af1, AssociationFeature af2, Feature f1, Feature f2 \
    WHERE ig.from_link = ? and ig.to_link =  af1.from_link and af1.from_link = af2.from_link and (af1.to_link IN (%s) AND af2.to_link IN (%s) ) AND af1.to_link < af2.to_link AND f1.id = af1.to_link AND f2.id = af2.to_link
QIndex.GeneId.buildInternalNetwork.GENE_GENE = 2:3
QIndex.DatasetId.buildInternalNetwork.GENE_GENE = 1
RSIndex.EntityId1.buildInternalNetwork.GENE_GENE = 1
RSIndex.EntityId2.buildInternalNetwork.GENE_GENE = 2
RSIndex.NodeName1.buildInternalNetwork.GENE_GENE = 3
RSIndex.NodeName2.buildInternalNetwork.GENE_GENE = 4
RSIndex.EdgeName.buildInternalNetwork.GENE_GENE = 5
RSIndex.Weight.buildInternalNetwork.GENE_GENE = 6

SQL.buildInternalNetwork.GENE_CLUSTER = \
     SELECT DISTINCT af1.to_link, a1.id, f1.source_id, a1.name, 'is member of', af1.strength  \
     FROM IsGroupingOf ig, AssociationFeature af1, Association a1, Feature f1  \
     WHERE ig.from_link = ? and ig.to_link = af1.from_link and af1.to_link IN (%s) AND a1.id = (%s) AND f1.id = af1.to_link AND af1.from_link = a1.id
QIndex.GeneId.buildInternalNetwork.GENE_CLUSTER = 2
QIndex.ClusterId.buildInternalNetwork.GENE_CLUSTER = 3
QIndex.DatasetId.buildInternalNetwork.GENE_CLUSTER = 1
RSIndex.EntityId1.buildInternalNetwork.GENE_CLUSTER = 1
RSIndex.EntityId2.buildInternalNetwork.GENE_CLUSTER = 2
RSIndex.NodeName1.buildInternalNetwork.GENE_CLUSTER = 3
RSIndex.NodeName2.buildInternalNetwork.GENE_CLUSTER = 4
RSIndex.EdgeName.buildInternalNetwork.GENE_CLUSTER = 5
RSIndex.Weight.buildInternalNetwork.GENE_CLUSTER = 6

########################################
# buildNetwork methods
########################################

SQL.buildNetwork.GENE_GENE = \
    SELECT DISTINCT af1.to_link, af2.to_link, f1.source_id, f2.source_id, 'is interact with', af1.strength \
    FROM IsGroupingOf ig, AssociationFeature af1, AssociationFeature af2, Feature f1, Feature f2 \
    WHERE ig.from_link = ? and ig.to_link =  af1.from_link and af1.from_link = af2.from_link AND af1.to_link < af2.to_link AND f1.id = af1.to_link AND f2.id = af2.to_link order by af1.strength desc limit 500000
QIndex.DatasetId.buildNetwork.GENE_GENE = 1
RSIndex.EntityId1.buildNetwork.GENE_GENE = 1
RSIndex.EntityId2.buildNetwork.GENE_GENE = 2
RSIndex.NodeName1.buildNetwork.GENE_GENE = 3
RSIndex.NodeName2.buildNetwork.GENE_GENE = 4
RSIndex.EdgeName.buildNetwork.GENE_GENE = 5
RSIndex.Weight.buildNetwork.GENE_GENE = 6

SQL.buildNetwork.GENE_CLUSTER = \
     SELECT DISTINCT af1.to_link, a1.id, f1.source_id, a1.name, 'is member of', af1.strength  \
     FROM IsGroupingOf ig, AssociationFeature af1, Association a1, Feature f1  \
     WHERE ig.from_link = ? and ig.to_link = af1.from_link AND f1.id = af1.to_link AND af1.from_link = a1.id order by af1.strength desc limit 500000
QIndex.DatasetId.buildNetwork.GENE_CLUSTER = 1
RSIndex.EntityId1.buildNetwork.GENE_CLUSTER = 1
RSIndex.EntityId2.buildNetwork.GENE_CLUSTER = 2
RSIndex.NodeName1.buildNetwork.GENE_CLUSTER = 3
RSIndex.NodeName2.buildNetwork.GENE_CLUSTER = 4
RSIndex.EdgeName.buildNetwork.GENE_CLUSTER = 5
RSIndex.Weight.buildNetwork.GENE_CLUSTER = 6
