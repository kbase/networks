storename  = db1-networks-pdev


########################################
# c3po
########################################

c3po.setDriverClass = com.mysql.jdbc.Driver
c3po.setJdbcUrl = jdbc:mysql://firm.mcs.anl.gov:3306/kbase_sapling_v2
c3po.setUser = kbase_sapselect
c3po.setPassword = kbase4me2
c3po.setMaxStatements = 180
c3po.setMaxStatementsPerConnection = 10
c3po.setIdleConnectionTestPeriod = 240
c3po.setPreferredTestQuery = SELECT 1

########################################
# basic properties
########################################

Edge2NodeType1.GENE = GENE
Edge2NodeType2.GENE = GENE
Edge2NodeType2.CLUSTER = PPI_COMPLEX
Default.EdgeTypes = GENE_GENE
Supported.EdgeTypes = GENE_GENE:GENE_CLUSTER


########################################
# loadDatasets method
########################################

# Example
#  "id" : "kb|netdataset.mak.1",
#  "name" : "MAKv1.0 Shewanella dataset",
#  "description" : "Shewanella dataset",
#  "networkType" : "REGULATORY_NETWORK",
#  "sourceReference" : "MAK_BICLUSTER",
#  "taxons" : "kb|g.20848" ,

# Previous
#	select id from interaction_dataset
#	select description, data_source, data_url from interaction_dataset where id=?
#	select distinct(substring_index(f.feature_id,'.',2)) from interaction_protein f, interaction i where f.interaction_id=i.id and i.interaction_dataset_id=

SQL.loadDatasets = \
	select \
		d.id as DATASET_ID \
		, description as DATASET_NAME \ 
		, concat( "PPI network: ", d.description) as DATASET_DESCRIPTION \
		, "PROT_PROT_INTERACTION" as DATASET_NETWORKTYPE \
		, CASE d.data_source WHEN "MO" THEN "MO" WHEN "EcoCyc" THEN 'ECOCYC'  ELSE "PPI" END as DATASET_SOURCEREFERENCE \
		, group_concat(g.to_link separator ":") as DATASET_TAXONS \
# Other properties; will implement it later		
#		, d.id as interaction_dataset_id \
#		, d.data_url as url		
	from \
		InteractionDataset d \  
		join IsDatasetFor g \
		on (g.from_link = d.id) group by d.id;

########################################
# getDatasets methods
########################################

# search by GENE entity id

# Previous
# select distinct(i.interaction_dataset_id) from interaction i, interaction_protein f where f.interaction_id=i.id and f.feature_id=?
 
SQL.getDatasets.GENE = \
	select \  
		distinct g.from_link \  
	from \
		Interaction i \
		join InteractionFeature f on f.from_link=i.id \
		join IsGroupingOf g on g.to_link=i.id \
	where \ 
		f.to_link=? 
	
QIndex.GeneId.getDatasets.GENE = 1
RSIndex.DatasetId.getDatasets.GENE = 1


# search by PPI_COMPLEX entity id

SQL.getDatasets.PPI_COMPLEX = \
	select \  
		distinct g.from_link \
	from \
		Interaction i \
		join IsGroupingOf g on g.to_link=i.id \
	where \ 
		i.id = ?
	
QIndex.PPIComplexId.getDatasets.PPI_COMPLEX = 1
RSIndex.DatasetId.getDatasets.PPI_COMPLEX = 1

########################################
# buildFirstNeighborNetwork methods
########################################

#GENE_GENE edge type, search by GENE entity id

# Previous
# select i.id, f1.feature_id, f1.id from interaction i, interaction_protein f1, interaction_protein f2 where i.interaction_dataset_id=? and f1.interaction_id=i.id and f2.interaction_id=i.id and f2.feature_id=? order by i.id asc, f1.rank asc

SQL.buildFirstNeighborNetwork.GENE_GENE.GENE = \
	select \
		f1.to_link  \
		, f2.to_link \ 
		, IF ((f1.rank < f2.rank), \
		  concat(f1.to_link, "_", f2.to_link),  \
		  concat(f2.to_link, "_", f1.to_link)) \
		, IF ((i.directional=0), 0, \
		    IF ((f1.rank < f2.rank), 1, -1)) \
		, i.confidence \
		, f2.strength \
# Other properties
		, i.description as description \
		, i.url as url \
		, m.description as detection_method \
		, c.from_link as citation_id \
		, f1.stoichiometry as stoichiometry1 \
		, f2.stoichiometry as stoichiometry2 \
		, f1.rank as rank1 \
		, f2.rank as rank2 \
		, i.directional \
#		, i.id \	
	from  \
		Interaction i \
		join InteractionFeature f1 on f1.from_link = i.id  \
		join InteractionFeature f2 on f2.from_link = i.id \  
		join IsGroupingOf g on g.to_link=i.id \
		left join PublishedInteraction c on c.to_link = i.id \
		left join DetectedWithMethod mm on mm.to_link = i.id \
		join InteractionDetectionType m on mm.from_link = m.id \
	where \
		g.from_link=? \
		and f1.to_link=?
	
QIndex.DatasetId.buildFirstNeighborNetwork.GENE_GENE.GENE = 1
QIndex.GeneId.buildFirstNeighborNetwork.GENE_GENE.GENE = 2
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_GENE.GENE = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_GENE.GENE = 2
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_GENE.GENE = 3
RSIndex.EdgeDirected.buildFirstNeighborNetwork.GENE_GENE.GENE = 4
RSIndex.Confidence.buildFirstNeighborNetwork.GENE_GENE.GENE = 5
RSIndex.Weight.buildFirstNeighborNetwork.GENE_GENE.GENE = 6
RSName.EdgeProperties.buildFirstNeighborNetwork.GENE_GENE.GENE = description:url:citation_id:detection_method:directional
RSName.Node1Properties.buildFirstNeighborNetwork.GENE_GENE.GENE = stoichiometry1:rank1
RSName.Node2Properties.buildFirstNeighborNetwork.GENE_GENE.GENE = stoichiometry2:rank2




#GENE_PPI_COMPLEX edge type, search by GENE entity id

# Previous
#   select i.id, f.id from interaction i, interaction_protein f where i.interaction_dataset_id=? and f.interaction_id=i.id and f.feature_id=?
#	select i.interaction_dataset_id, i.description, i.is_directional, i.confidence, m.description, i.data_url, i.citation_id, f.stoichiometry, f.strength, f.rank, i.id from interaction_protein f, interaction i left join interaction_detection_type m on m.id=i.detection_method_id where f.interaction_id=i.id and f.id=

SQL.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = \
	select \
		f.to_link \
		, concat("complex ", i.description) \
		, concat("complex ", i.description, "_", f.to_link) \
		, -1 \
		, f.strength \
		, i.confidence \
# Other properties	
		, i.description as description \
		, i.url as url \
		, m.description as detection_method \
		, c.from_link as citation_id \
		, f.stoichiometry \
		, f.rank \
		, g.from_link as interaction_dataset_id \
		, i.id as interaction_id \
		, i.directional \
#		, i.id \
	from \
		Interaction i \
		join InteractionFeature f on f.from_link=i.id \
		join IsGroupingOf g on g.to_link=i.id \
		left join PublishedInteraction c on c.to_link = i.id \
		left join DetectedWithMethod mm on mm.to_link = i.id \
		join InteractionDetectionType m on mm.from_link = m.id \
	 where \
		g.from_link=? \
		and f.to_link=?
									 
QIndex.DatasetId.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 1
QIndex.GeneId.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 2
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 2
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 3
RSIndex.EdgeDirected.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 4
RSIndex.Weight.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 5
RSIndex.Confidence.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = 6
RSName.EdgeProperties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = description:url:citation_id:detection_method:interaction_id:interaction_dataset_id:stoichiometry:rank:directional
RSName.Node1Properties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = stoichiometry:rank
RSName.Node2Properties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.GENE = description:url:citation_id:detection_method:interaction_id:interaction_dataset_id



#GENE_PPI_COMPLEX edge type, search by PPI_COMPLEX entity id

SQL.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = \
	select \
		f.to_link \
		, i.id \
		, "Member of PPI complex" \
		, -1 \
		, f.strength \
		, i.confidence \
# Other properties	
		, i.description as description \
		, i.url as url \
		, m.description as detection_method \
		, c.from_link as citation_id \
		, f.stoichiometry \
		, f.rank \
		, g.from_link as interaction_dataset_id \
		, i.id as interaction_id \
		, i.directional \
#		, i.id
	from \
		Interaction i \
		join InteractionFeature f on f.from_link=i.id \
		join IsGroupingOf g on g.to_link=i.id \
		left join PublishedInteraction c on c.to_link = i.id \
		left join DetectedWithMethod mm on mm.to_link = i.id \
		join InteractionDetectionType m on mm.from_link = m.id \
	 where \
	        g.from_link = ? \
		and i.id = ?

QIndex.DatasetId.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 1
QIndex.PPIComplexId.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 2
RSIndex.EntityId1.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 1
RSIndex.EntityId2.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 2
RSIndex.EdgeName.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 3
RSIndex.EdgeDirected.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 4
RSIndex.Weight.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 5
RSIndex.Confidence.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = 6
RSName.EdgeProperties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = description:url:citation_id:detection_method:interaction_id:interaction_dataset_id:stoichiometry:rank:directional
RSName.Node1Properties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = stoichiometry:rank
RSName.Node2Properties.buildFirstNeighborNetwork.GENE_PPI_COMPLEX.PPI_COMPLEX = description:url:citation_id:detection_method:interaction_id:interaction_dataset_id


########################################
# buildInternalNetwork methods
########################################

#GENE_GENE edge type, search by GENE entity ids

SQL.buildInternalNetwork.GENE_GENE = \
	select \
		f1.to_link  \
		, f2.to_link \ 
		, IF ((f1.rank < f2.rank), \
		  concat(f1.to_link, "_", f2.to_link),  \
		  concat(f2.to_link, "_", f1.to_link)) \
		, IF ((i.directional=0), 0, \
		    IF ((f1.rank < f2.rank), 1, -1)) \
		, i.confidence \
		, f2.strength \
# Other properties
		, i.description as description \
		, i.url as url \
		, m.description as detection_method \
		, c.from_link as citation_id \
		, f1.stoichiometry as stoichiometry1 \
		, f2.stoichiometry as stoichiometry2 \
		, f1.rank as rank1 \
		, f2.rank as rank2 \
		, i.directional \
#		, i.id \	
	from  \
		Interaction i \
		join InteractionFeature f1 on f1.from_link = i.id  \
		join InteractionFeature f2 on f2.from_link = i.id \  
		join IsGroupingOf g on g.to_link=i.id \
		left join PublishedInteraction c on c.to_link = i.id \
		left join DetectedWithMethod mm on mm.to_link = i.id \
		join InteractionDetectionType m on mm.from_link = m.id \
	where \
		f1.to_link < f2.to_link \ 
		and g.from_link = ? \
		and f1.to_link in (%s) \
		and f2.to_link in (%s) 

QIndex.DatasetId.buildInternalNetwork.GENE_GENE = 1
QIndex.GeneId.buildInternalNetwork.GENE_GENE = 2:3
RSIndex.EntityId1.buildInternalNetwork.GENE_GENE = 1
RSIndex.EntityId2.buildInternalNetwork.GENE_GENE = 2
RSIndex.EdgeName.buildInternalNetwork.GENE_GENE = 3
RSIndex.EdgeDirected.buildInternalNetwork.GENE_GENE = 4
RSIndex.Confidence.buildInternalNetwork.GENE_GENE = 5
RSIndex.Weight.buildInternalNetwork.GENE_GENE = 6
RSName.EdgeProperties.buildInternalNetwork.GENE_GENE = description:url:citation_id:detection_method:directional
RSName.Node1Properties.buildInternalNetwork.GENE_GENE = stoichiometry1:rank1
RSName.Node2Properties.buildInternalNetwork.GENE_GENE = stoichiometry2:rank2



#GENE_PPI_COMPLEX edge type, search by GENE and PPI_COMPLEX entity ids

SQL.buildInternalNetwork.GENE_PPI_COMPLEX = \
	select \
		f.to_link \
		, i.id \
		, "Member of PPI complex" \
		, -1 \
		, f.strength \
		, i.confidence \
# Other properties	
		, i.description as description \
		, i.url as url \
		, m.description as detection_method \
		, c.from_link as citation_id \
		, f.stoichiometry \
		, f.rank \
		, i.directional \
#		, i.id \
	from \
		Interaction i \
		join InteractionFeature f on f.from_link=i.id \
		join IsGroupingOf g on g.to_link=i.id \
		left join PublishedInteraction c on c.to_link = i.id \
		left join DetectedWithMethod mm on mm.to_link = i.id \
		join InteractionDetectionType m on mm.from_link = m.id \
	 where \
		g.from_link = ? \
		and f.to_link in(%s) \
		and i.id in(%s) 
									 
QIndex.DatasetId.buildInternalNetwork.GENE_PPI_COMPLEX = 1
QIndex.GeneId.buildInternalNetwork.GENE_PPI_COMPLEX = 2
QIndex.PPIComplexId.buildInternalNetwork.GENE_PPI_COMPLEX = 3
RSIndex.EntityId1.buildInternalNetwork.GENE_PPI_COMPLEX = 1
RSIndex.EntityId2.buildInternalNetwork.GENE_PPI_COMPLEX = 2
RSIndex.EdgeName.buildInternalNetwork.GENE_PPI_COMPLEX = 3
RSIndex.EdgeDirected.buildInternalNetwork.GENE_PPI_COMPLEX = 4
RSIndex.Weight.buildInternalNetwork.GENE_PPI_COMPLEX = 5
RSIndex.Confidence.buildInternalNetwork.GENE_PPI_COMPLEX = 6
RSName.EdgeProperties.buildInternalNetwork.GENE_PPI_COMPLEX = description:url:citation_id:detection_method:directional:stoichiometry:rank
RSName.Node1Properties.buildInternalNetwork.GENE_PPI_COMPLEX = stoichiometry:rank

